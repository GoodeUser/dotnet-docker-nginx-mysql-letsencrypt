version: "3"
services:
  web:
    build: ./Web
    ports:
      - "8080"
    restart: always
    container_name: my-app
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://my-db@postgres/my-db
      NODE_ENV: production
      VIRTUAL_HOST: kylegoo.de
      LETSENCRYPT_HOST: kylegoo.de
      LETSENCRYPT_EMAIL: goodelkyle@gmail.com
  
  postgres:
    restart: always
    image: postgres:9.6.2-alpine
    container_name: my-pg-db
    volumes:
      - my-app-data:/var/lib/postgresql/data
    ports:
      - "0.0.0.0:5432:5432"
    environment:
      POSTGRES_USER: my-db
      POSTGRES_DB: my-db
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static:/app/app/static/
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    depends_on:
      - web
  letsencrypt:
    restart: always
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
volumes:
  my-app-data:
  html:
  certs:
  vhost:
  static: