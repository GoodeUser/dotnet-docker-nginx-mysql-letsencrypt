version: "3"
services:
  strapi:
    container_name: strapi
    image: strapi/strapi
    environment:
      DATABASE_CLIENT: "mysql"
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_NAME: strapi
      DATABASE_USERNAME: "${MYSQL_USER}"
      DATABASE_PASSWORD: "${MYSQL_PASSWORD}"

      HTTPS_METHOD: "${HTTPS_METHOD}"

      # in development these should be localhost but in production these should be the domain you are using
      VIRTUAL_HOST: "${VIRTUAL_HOST}"
      LETSENCRYPT_HOST: "${LETSENCRYPT_HOST}"
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"
    ports:
      - 1337:1337
    volumes:
      - ./app:/srv/app
    depends_on:
      - mysql

  # app:
  #   image: orchardproject/orchardcore-cms-linux
  #   # build: ./Web
  #   ports:
  #     - "7070:80"
  #   restart: always
  #   # container_name: my-app
  #   depends_on:
  #     - mysql
  #   environment:
  #     OrchardCore__DatabaseProvider: "MySql"
  #     OrchardCore__ConnectionString: "User ID=${MYSQL_USER};Password=${MYSQL_PASSWORD};Host=mysql;Port=3306;Database=orchardcore_database;"
  #     OrchardCore__RecipeName: ${ORCHARD_RECIPE}

  #     # OrchardCore__OrchardCore_AutoSetup__AutoSetupPath: ""
  #     # OrchardCore__OrchardCore_AutoSetup__Tenants__0__ShellName: "Default"
  #     # OrchardCore__OrchardCore_AutoSetup__Tenants__0__SiteName: ${SITE_NAME}
  #     # OrchardCore__OrchardCore_AutoSetup__Tenants__0__SiteTimeZone: ${TIMEZONE}
  #     # OrchardCore__OrchardCore_AutoSetup__Tenants__0__AdminUsername: ${ORCHARD_USERNAME}
  #     # OrchardCore__OrchardCore_AutoSetup__Tenants__0__AdminEmail: ${ORCHARD_EMAIL}
  #     # OrchardCore__OrchardCore_AutoSetup__Tenants__0__AdminPassword: ${ORCHARD_PASSWORD}
  #     # OrchardCore__OrchardCore_AutoSetup__Tenants__0__DatabaseProvider: "MySql"
  #     # OrchardCore__OrchardCore_AutoSetup__Tenants__0__DatabaseConnectionString: "User ID=${MYSQL_USER};Password=${MYSQL_PASSWORD};Host=mysql;Port=3306;Database=orchardcore_database;"
  #     # OrchardCore__OrchardCore_AutoSetup__Tenants__0__RecipeName: ${ORCHARD_RECIPE}

  #     # in production we should redirect to SSL but in dev set this to noredirect
  #     HTTPS_METHOD: "${HTTPS_METHOD}"

  #     # in development these should be localhost but in production these should be the domain you are using
  #     VIRTUAL_HOST: "${VIRTUAL_HOST}"
  #     LETSENCRYPT_HOST: "${LETSENCRYPT_HOST}"
  #     LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"

  # mysql:
  #   image: mysql:5.7
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     MYSQL_DATABASE: 'orchardcore_database'
  #     MYSQL_USER: "${MYSQL_USER}"
  #     MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
  #     MYSQL_ROOT_PASSWORD: 'root_password'
  #   volumes:
  #     - db_data:/var/lib/mysql

  mysql:
    # container_name: mysql
    image: mysql:5.7
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: strapi
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: strapi
    volumes:
      - ./db:/var/lib/mysql
  # postgres:
  #   restart: always
  #   image: postgres:9.6.2-alpine
  #   # container_name: my-pg-db
  #   volumes:
  #     - db_data:/var/lib/mysql
  #   ports:
  #     - "0.0.0.0:5432:5432"
  #   environment:
  #     POSTGRES_USER: my-db
  #     POSTGRES_DB: my-db

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static:/app/app/static/
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    # depends_on:
      # - app
      # - strapi

  letsencrypt:
    restart: always
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
    profiles: ["production"] # only run the lets encrypt service in production

volumes:
  db_data:
  html:
  certs:
  vhost:
  static: